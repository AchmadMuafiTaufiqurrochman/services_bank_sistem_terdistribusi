# alembic/versions/b43fb468eb21_create_initial_tables.py
"""create initial tables

Revision ID: b43fb468eb21
Revises: 
Create Date: 2025-10-31 11:42:46.659933

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b43fb468eb21'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customers',
    sa.Column('customer_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=True),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('NIK', sa.String(length=20), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('PIN', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.PrimaryKeyConstraint('customer_id'),
    sa.UniqueConstraint('NIK')
    )
    op.create_table('logins',
    sa.Column('login_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('last_login', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.customer_id'], ),
    sa.PrimaryKeyConstraint('login_id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('portofolio_accounts',
    sa.Column('portofolio_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('account_number', sa.String(length=30), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('currency_code', sa.CHAR(length=3), server_default='IDR', nullable=True),
    sa.Column('balance', sa.Numeric(precision=15, scale=2), server_default='0.00', nullable=True),
    sa.Column('open_date', sa.Date(), server_default=sa.text('(CURRENT_DATE())'), nullable=True),
    sa.Column('status', sa.Enum('Active', 'Dormant', 'Closed', name='accountstatus'), server_default='Active', nullable=True),
    sa.Column('is_default', sa.Boolean(), server_default='1', nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.customer_id'], ),
    sa.PrimaryKeyConstraint('portofolio_id'),
    sa.UniqueConstraint('account_number'),
    sa.UniqueConstraint('customer_id')
    )
    op.create_table('transactions',
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('transaction_type', sa.Enum('TrfOnln', 'TrfOvrbok', name='transactiontype'), nullable=False),
    sa.Column('transaction_bank', sa.Enum('Internal', 'Eksternal', name='transactionbank'), nullable=False),
    sa.Column('bank_reference', sa.String(length=50), nullable=True),
    sa.Column('source_account_number', sa.String(length=30), nullable=True),
    sa.Column('target_account_number', sa.String(length=30), nullable=True),
    sa.Column('amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('currency_code', sa.CHAR(length=3), server_default='IDR', nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('transaction_date', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['source_account_number'], ['portofolio_accounts.account_number'], ),
    sa.PrimaryKeyConstraint('transaction_id')
    )
    op.create_table('mutations',
    sa.Column('mutation_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('account_number', sa.String(length=30), nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('mutation_type', sa.Enum('Debit', 'Kredit', name='mutationtype'), nullable=False),
    sa.Column('amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('balance_after', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['account_number'], ['portofolio_accounts.account_number'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.transaction_id'], ),
    sa.PrimaryKeyConstraint('mutation_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('mutations')
    op.drop_table('transactions')
    op.drop_table('portofolio_accounts')
    op.drop_table('logins')
    op.drop_table('customers')
    # ### end Alembic commands ###
